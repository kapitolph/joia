name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      REGISTRY: ${{ vars.JOIA_REGISTRY }}
      SERVICE_ACCOUNT_USERNAME: ${{ vars.SERVICE_ACCOUNT_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      NEXT_PUBLIC_FRONTEND_URL: ${{ vars.NEXT_PUBLIC_FRONTEND_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.19

      - name: Enable Corepack
        run: corepack enable

      - name: Cache dependencies
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Build the app
        run: yarn production:build

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.SERVICE_ACCOUNT_USERNAME }}
          password: ${{ env.REGISTRY_TOKEN }}

      - name: Set up Depot CLI
        uses: depot/setup-action@v1

      - name: Run docker build
        uses: depot/build-push-action@v1
        with:
          project: ${{ vars.DEPOT_PROJECT_ID }}
          build-args: "DATABASE_URL=${{ env.DATABASE_URL }},ENCRYPTION_KEY=${{ env.ENCRYPTION_KEY }},NEXT_PUBLIC_FRONTEND_URL=${{ env.NEXT_PUBLIC_FRONTEND_URL }}"
          context: ./
          platforms: "linux/amd64,linux/arm64"
          push: true
          file: ./Dockerfile.production
          tags: ${{ env.REGISTRY }}/joia:${{ env.SHORT_SHA }}
